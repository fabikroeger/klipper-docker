version: '3.4'

services:
  klipper:
    image: gucio1200/klipper:latest
#    image: 482421a55a2e
    container_name: klipper
    privileged: true
    depends_on:
      - mcu
    restart: unless-stopped
    volumes:
      - ./runtime/src/klipper:/home/klippy/klipper
      - ./runtime/src/moonraker:/home/klippy/moonraker
      - ./runtime/src/KlipperScreen:/home/klippy/klipperscreen
      - ./runtime/.moonraker_database:/home/klippy/.moonraker_database
      - ./runtime/config:/home/klippy/.config
      - ./runtime/logs:/logs
      - ./runtime/gcode_files:/home/klippy/gcode_files
      - ./runtime/tmp:/tmp
      - /dev:/dev
    devices:
      - /dev/klipper:/dev/klipper

  mcu:
    image: gucio1200/klipper:latest
#    image: 482421a55a2e
    container_name: mcu
    privileged: true
    restart: unless-stopped
    user: "0:0"
    command: /home/klippy/klipper/out_linux/klipper.elf -w
    volumes:
      - ./runtime/config:/home/klippy/.config
      - ./runtime/logs:/logs
      - ./runtime/gcode_files:/home/klippy/gcode_files
      - ./runtime/tmp:/tmp
      - /dev:/dev

  moonraker:
    image: gucio1200/moonraker:latest
#    image: 1fabb9b3149b
    container_name: moonraker
    privileged: true
    ports:
      - 7125:7125
    restart: unless-stopped
    depends_on:
      - klipper
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:7125/server/info"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./runtime/src/klipper:/home/klippy/klipper
      - ./runtime/src/moonraker:/home/klippy/moonraker
      - ./runtime/src/fluidd:/home/klippy/fluidd
      - ./runtime/src/KlipperScreen:/home/klippy/klipperscreen
      - ./runtime/.moonraker_database:/home/klippy/.moonraker_database
      - ./runtime/config:/home/klippy/.config
      - ./runtime/logs:/logs
      - ./runtime/gcode_files:/home/klippy/gcode_files
      - ./runtime/tmp:/tmp
      - /dev:/dev

  klipperscreen:
    image: gucio1200/klipperscreen:latest
    build:
      dockerfile: ./klipperscreen/Dockerfile
      context: .
    environment:
     - DISPLAY=unix:0.0
    container_name: klipperscreen
    restart: unless-stopped
    depends_on:
      moonraker:
        condition: service_healthy
    links:
      - moonraker:moonraker
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://moonraker:7125/printer/info"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./runtime/src/KlipperScreen:/root/KlipperScreen
      - ./runtime/config/KlipperScreen.conf:/root/KlipperScreen.conf

  fluidd:
    image: cadriel/fluidd:latest
    container_name: fluidd
    ports:
      - 8010:80
    restart: unless-stopped
    depends_on:
      moonraker:
        condition: service_healthy
    links:
      - moonraker:moonraker

  mainsail:
    image: gucio1200/mainsail:latest
    build:
      dockerfile: Dockerfile
      context: frontend
      args:
        FRONTEND_ZIP_URL: https://github.com/meteyou/mainsail/releases/latest/download/mainsail.zip
    container_name: mainsail
    restart: unless-stopped
    ports:
      - 8011:80
    depends_on:
      moonraker:
        condition: service_healthy
    links:
      - moonraker:moonraker

  ustreamer:
    image: gucio1200/ustreamer:latest
    build:
      dockerfile: ./ustreamer/Dockerfile
      context: .
    container_name: ustreamer
    restart: unless-stopped
    command: ./ustreamer --host=0.0.0.0 --slowdown --format=uyvy --drop-same-frames=30
    ports:
      - 8080:8080
    devices:
      - /dev/video0:/dev/video0

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
      - "8000:8000"
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./runtime/portainer:/data

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8012:80"
    volumes:
      - ./runtime/logs:/usr/share/nginx/html/logs
      - ./runtime/gcode_files:/usr/share/nginx/html/gcode_files
      - ./runtime/tmp:/usr/share/nginx/html/tmp
      - ./runtime/empty:/usr/share/nginx/html
      - ./runtime/default.conf:/etc/nginx/conf.d/default.conf
